<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.feilong.platform.spring</groupId>
		<artifactId>feilong-spring-parent</artifactId>
		<version>5.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>feilong-spring-all</artifactId>
	<packaging>jar</packaging>

	<dependencies>

		<!-- feilong-spring-core -->
		<dependency>
			<groupId>com.feilong.platform.spring</groupId>
			<artifactId>feilong-spring-core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- feilong-spring-aop -->
		<dependency>
			<groupId>com.feilong.platform.spring</groupId>
			<artifactId>feilong-spring-aop</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- feilong-spring-context -->
		<dependency>
			<groupId>com.feilong.platform.spring</groupId>
			<artifactId>feilong-spring-context</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- feilong-spring-context-concurrent -->
		<dependency>
			<groupId>com.feilong.platform.spring</groupId>
			<artifactId>feilong-spring-context-concurrent</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- feilong-spring-context-support-quartz -->
		<dependency>
			<groupId>com.feilong.platform.spring</groupId>
			<artifactId>feilong-spring-context-support-quartz</artifactId>
			<version>${project.version}</version>
		</dependency>


		<!-- feilong-spring-jdbc -->
<!-- 		<dependency>
			<groupId>com.feilong.platform.spring</groupId>
			<artifactId>feilong-spring-jdbc</artifactId>
			<version>${project.version}</version>
		</dependency> -->

		<!-- feilong-spring-mobile -->
		<dependency>
			<groupId>com.feilong.platform.spring</groupId>
			<artifactId>feilong-spring-mobile</artifactId>
			<version>${project.version}</version>
		</dependency>


		<!-- feilong-spring-web -->
		<dependency>
			<groupId>com.feilong.platform.spring</groupId>
			<artifactId>feilong-spring-web</artifactId>
			<version>${project.version}</version>
		</dependency>


		<!-- feilong-spring-extension -->
		<dependency>
			<groupId>com.feilong.platform.spring</groupId>
			<artifactId>feilong-spring-extension</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- feilong-spring-security since 4.0.3 -->
		<dependency>
			<groupId>com.feilong.platform.spring</groupId>
			<artifactId>feilong-spring-security</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- since 4.0.4 -->
		<dependency>
			<groupId>com.feilong.platform.spring</groupId>
			<artifactId>feilong-spring-monitor</artifactId>
			<version>${project.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${v.maven-shade-plugin}</version>

				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>

							<!-- When true, transitive deps of removed dependencies are promoted to direct dependencies.
								This should allow the drop in replacement of the removed deps with the new shaded jar and everything should still work. -->
							<promoteTransitiveDependencies>true</promoteTransitiveDependencies>


							<!-- With version 2.2 of the maven-shade-plugin, they added a "shadeTestJar" option (see MSHADE-158): http://maven.apache.org/plugins/maven-shade-plugin/shade-mojo.html#shadeTestJar -->
							<shadeTestJar>true</shadeTestJar>
							<!-- When true, it will attempt to create a sources jar as well -->
							<createSourcesJar>true</createSourcesJar>

							<artifactSet>
								<includes>
									<include>${project.groupId}:*:*</include>
								</includes>
							</artifactSet>

							<!-- since 4.0.5 -->
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.handlers</resource>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.schemas</resource>
								</transformer>
							</transformers>

						</configuration>


					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>